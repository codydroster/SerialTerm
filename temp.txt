def update_transmitbyte_arguments(self, widget):
		for byte in self.entryarray:
			if hasattr(byte, 'axis_combo'):
				if widget is byte.axis_combo:
					if byte.axis_combo.get_active_text() == ' ':
						byte.axis = None
					else:				
						byte.axis = byte.axis_combo.get_active()


		for byte in self.entryarray:
			if hasattr(byte, 'button0'):
				if widget is byte.button0_combo:
					if byte.button0_combo.get_active_text() == ' ':
						byte.button0 = None
					else:		
						byte.button0 = byte.button0_combo.get_active()

		for byte in self.entryarray:
			if hasattr(byte, 'button1'):
				if widget is byte.button1_combo:
					if byte.button1_combo.get_active_text() == ' ':
						byte.button1 = None
					else:		
						byte.button1 = byte.button1_combo.get_active()


		for byte in self.entryarray:
			if hasattr(byte, 'hat_combo'):
				if widget is byte.hat_combo:
					if byte.hat_combo.get_active_text() == ' ':
						byte.hat = None
					else:		
						byte.hat = byte.hat_combo.get_active()
		
		



def map_button(self):
		for val in self.entryarray:
			if hasattr(val, 'button_label'):
				val.button0_combo.remove_all()
				val.button1_combo.remove_all()
				if self.joystickid != -1:
					if self.joystickid != None:

						for i in range(pygame.joystick.Joystick(self.joystickid).get_numbuttons()):
							val.button0_combo.insert_text(i, str(i))
							val.button1_combo.insert_text(i, str(i))
						val.button0_combo.insert_text(-1, ' ')
						val.button1_combo.insert_text(-1, ' ')



	def map_hat(self):
		for val in self.entryarray:
			if hasattr(val, 'hat_label'):
				val.hat_combo.remove_all()

				if self.joystickid != -1:
					if self.joystickid != None:

						for i in range(pygame.joystick.Joystick(self.joystickid).get_numhats()+1):
							val.hat_combo.insert_text(i, str(i))
						val.hat_combo.insert_text(-1, ' ')
